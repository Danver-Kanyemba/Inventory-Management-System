package ict.inventory.admin;

import ict.inventory.connectionpackage.ConnectToDB;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author danverkanyemba
 */
public class AddProductFrm extends javax.swing.JFrame {

    /**
     * Creates new form addProductFrm
     */
    public AddProductFrm() {
        initComponents();
        retrieveCategory();
        retrieveLocation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        addProductPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        productNameTxt = new javax.swing.JTextField();
        issueBtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        productSNTxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionTxt = new javax.swing.JTextArea();
        locationCombo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        modelTxt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        categoryCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        addProductPanel.setBackground(java.awt.Color.white);
        addProductPanel.setLayout(new java.awt.GridBagLayout());

        jPanel7.setOpaque(false);

        productNameTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        productNameTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        issueBtn.setBackground(new java.awt.Color(13, 101, 205));
        issueBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        issueBtn.setForeground(new java.awt.Color(255, 255, 255));
        issueBtn.setText(" Add Stock");
        issueBtn.setBorder(null);
        issueBtn.setBorderPainted(false);
        issueBtn.setFocusPainted(false);
        issueBtn.setPreferredSize(new java.awt.Dimension(75, 29));
        issueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBtnActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(103, 103, 103));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Add Stock");

        productSNTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        productSNTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(103, 103, 103));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("Product S/N:");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(103, 103, 103));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel20.setText("Description:");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(103, 103, 103));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel21.setText("Name:");

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(103, 103, 103));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("Location:");

        descriptionTxt.setColumns(1);
        descriptionTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        descriptionTxt.setLineWrap(true);
        descriptionTxt.setRows(5);
        jScrollPane2.setViewportView(descriptionTxt);

        jLabel23.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(103, 103, 103));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText("Model:");

        modelTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        modelTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(103, 103, 103));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel25.setText("Category:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(issueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel19))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(productSNTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(categoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(modelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(33, 33, 33)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productSNTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(categoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(issueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 53, 15, 69);
        addProductPanel.add(jPanel7, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addProductPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void issueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBtnActionPerformed
            String productSerialNo = productSNTxt.getText();
            String model = modelTxt.getText();
            String productName = productNameTxt.getText();
            String category = categoryCombo.getSelectedItem().toString();
            String location = locationCombo.getSelectedItem().toString();
            String description = descriptionTxt.getText();
            String categoryId = "";
            String locationId = "";
            boolean isValid = true;
            
            if(productSerialNo.isEmpty())
            {
                 JOptionPane.showMessageDialog(null,"Product Serial No is required");
                 isValid=false;

            }
            if(productName.isEmpty())
            {
                 JOptionPane.showMessageDialog(null,"ProductName is required");
                 isValid=false;

            }   
            if(description.isEmpty())
            {
                 JOptionPane.showMessageDialog(null,"Description is required");
                 isValid=false;

            }  
            if(location.isEmpty())
            {
                 JOptionPane.showMessageDialog(null,"Location ID is required");
                 isValid=false;

            }    
            if(isValid){
                try {
                    ConnectToDB classForConnecting = new ConnectToDB();                    
                    ConnectToDB classForConnecting2 = new ConnectToDB();
                    ConnectToDB classForConnecting3 = new ConnectToDB();                    
                    String querySelectIdForCategory = "SELECT id FROM category where name='"+category+"'";
                    Statement st = classForConnecting.conn.createStatement();
                    ResultSet rs = st.executeQuery(querySelectIdForCategory);

                    while(rs.next()){
                        categoryId = rs.getString("id");
                    }    

                    String querySelectIdForLocation = "SELECT id FROM location where name='"+location+"'";
                    Statement st2 = classForConnecting2.conn.createStatement();
                    ResultSet rs2 = st2.executeQuery(querySelectIdForLocation);

                    while(rs2.next()){
                        locationId = rs2.getString("id");
                    }                       
                    String queryAddProduct = "INSERT INTO products "
                            + "(serial_no, model, prod_name, description, location, category)"
                            + " VALUES( ?, ?, ?, ?, ?, ?)";
                    PreparedStatement queryProduct = classForConnecting3.conn.prepareStatement(queryAddProduct);
                    queryProduct.setString(1, productSerialNo);
                    queryProduct.setString(2, model);
                    queryProduct.setString(3, productName);
                    queryProduct.setString(4, description);                     
                    queryProduct.setString(5, locationId);
                    queryProduct.setString(6, categoryId);
                                     
                    queryProduct.executeUpdate();
                    classForConnecting.conn.close();
                    this.dispose();
                    JOptionPane.showMessageDialog(null,"Stock added");

                } catch (SQLException ex) {
                    Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            }
            else{
                JOptionPane.showMessageDialog(null,"Please provide the required details");
 
            }
        
    
    }//GEN-LAST:event_issueBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProductFrm().setVisible(true);
               
            }
        });
    }

    public void retrieveCategory(){
     
        try {
            ConnectToDB classForConnecting = new ConnectToDB();
            String query = "SELECT name FROM category";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                String categoryName = rs.getString("name");
                categoryCombo.addItem(categoryName);
            }
            classForConnecting.conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }   
    public void retrieveLocation(){
     
        try {
            ConnectToDB classForConnecting = new ConnectToDB();
            String query = "SELECT name FROM location";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                String locationName = rs.getString("name");
                locationCombo.addItem(locationName);
            }
            classForConnecting.conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel addProductPanel;
    private static javax.swing.JComboBox<String> categoryCombo;
    private static javax.swing.JTextArea descriptionTxt;
    private static javax.swing.JButton issueBtn;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JComboBox<String> locationCombo;
    private static javax.swing.JTextField modelTxt;
    private static javax.swing.JTextField productNameTxt;
    private static javax.swing.JTextField productSNTxt;
    // End of variables declaration//GEN-END:variables

}
