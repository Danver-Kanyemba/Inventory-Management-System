/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ict.inventory.admin;

import ict.inventory.ordinaryuser.MainMenu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author danverkanyemba
 */
public class CreateNewUserFrm extends javax.swing.JFrame {

    /**
     * Creates new form CreateNewUserFrm
     */
    public CreateNewUserFrm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        createUsernameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        createPasswordTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        createRetypePasswordTxt = new javax.swing.JTextField();
        createUserBtnbyAdmin = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        roleCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(java.awt.Color.white);

        jPanel5.setBackground(java.awt.Color.white);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(103, 103, 103));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Create new user");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(103, 103, 103));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Username:");

        createUsernameTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        createUsernameTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(103, 103, 103));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Password:");

        createPasswordTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        createPasswordTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(103, 103, 103));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Retype-Password:");

        createRetypePasswordTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        createRetypePasswordTxt.setPreferredSize(new java.awt.Dimension(6, 29));

        createUserBtnbyAdmin.setBackground(new java.awt.Color(13, 101, 205));
        createUserBtnbyAdmin.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        createUserBtnbyAdmin.setForeground(new java.awt.Color(255, 255, 255));
        createUserBtnbyAdmin.setText("Create user");
        createUserBtnbyAdmin.setBorder(null);
        createUserBtnbyAdmin.setBorderPainted(false);
        createUserBtnbyAdmin.setContentAreaFilled(false);
        createUserBtnbyAdmin.setFocusPainted(false);
        createUserBtnbyAdmin.setOpaque(true);
        createUserBtnbyAdmin.setPreferredSize(new java.awt.Dimension(75, 29));
        createUserBtnbyAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserBtnbyAdminActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(103, 103, 103));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Role:");

        roleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal user", "Admin", "Super Admin" }));
        roleCombo.setPreferredSize(new java.awt.Dimension(82, 29));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createRetypePasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(createPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(createUsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(createUserBtnbyAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createUsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createRetypePasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(createUserBtnbyAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createUserBtnbyAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserBtnbyAdminActionPerformed
            String username = createUsernameTxt.getText();
            String password = createPasswordTxt.getText();
            String retypePassword = createRetypePasswordTxt.getText();
            String roleForUser = roleCombo.getSelectedItem().toString();
            boolean isInputCountry = true;
            MainMenu mainMenu = new MainMenu();
            String idForUser = mainMenu.idForUser;
            
            if(username.isEmpty()){
                JOptionPane.showMessageDialog(null,"Username is required");
                //infoLbl.setText("Error: Username is required");
                //infoLbl.setText(roleCombo.getSelectedItem().toString());
                isInputCountry = false;                
            }
            if(password.isEmpty()){
                JOptionPane.showMessageDialog(null,"password is required");
                //infoLbl.setText("Error: password is required");
               isInputCountry = false;   
           } 
            if(retypePassword.isEmpty()){
                JOptionPane.showMessageDialog(null,"Retypepassword is required");
                //infoLbl.setText("Error: Retypepassword is required");
                isInputCountry = false;   
            }  
            else if(password.equals(retypePassword)){
               // JOptionPane.showMessageDialog(null,"Retypepassword matched");
                //infoLbl.setText("Error: Retypepassword is required");
                
                if(username.equals("")){
                 JOptionPane.showMessageDialog(null,"username is required");
              //  infoLbl.setText("Error: username is required");
                }
                else {
                    System.out.println(roleForUser); 
                    try {
                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ict_inventory","root","");
                        String queryAddUser = "INSERT INTO users (username, password, role, added_by) "
                                + " VALUES( '"+username+"', '"+password+"', '"+roleForUser+"', '"+idForUser+"')";
                        Statement statem = conn.createStatement();
                        statem.executeUpdate(queryAddUser);
                        JOptionPane.showMessageDialog(null, "User created");
                    } catch (SQLException ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else{
                    JOptionPane.showMessageDialog(null,"Password matched");
            }
    }//GEN-LAST:event_createUserBtnbyAdminActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateNewUserFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateNewUserFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateNewUserFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateNewUserFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateNewUserFrm().setVisible(true);
//                createUserBtnbyAdmin.addActionListener(new createNewUserbyAdmin());
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField createPasswordTxt;
    private static javax.swing.JTextField createRetypePasswordTxt;
    private static javax.swing.JButton createUserBtnbyAdmin;
    private static javax.swing.JTextField createUsernameTxt;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private static javax.swing.JComboBox<String> roleCombo;
    // End of variables declaration//GEN-END:variables

//    private static class createNewUserbyAdmin implements ActionListener {
//
//        public createNewUserbyAdmin() {
//        }
//
//        @Override
//        public void actionPerformed(ActionEvent e) {
//            String username = createUsernameTxt.getText();
//            String password = createPasswordTxt.getText();
//            String retypePassword = createRetypePasswordTxt.getText();
//            String roleForUser = roleCombo.getSelectedItem().toString();
//            boolean isInputCountry = true;
//            if(username.isEmpty()){
//                JOptionPane.showMessageDialog(null,"Username is required");
//                //infoLbl.setText("Error: Username is required");
//                //infoLbl.setText(roleCombo.getSelectedItem().toString());
//                isInputCountry = false;                
//            }
//            if(password.isEmpty()){
//                JOptionPane.showMessageDialog(null,"password is required");
//                //infoLbl.setText("Error: password is required");
//               isInputCountry = false;   
//           } 
//            if(retypePassword.isEmpty()){
//                JOptionPane.showMessageDialog(null,"Retypepassword is required");
//                //infoLbl.setText("Error: Retypepassword is required");
//                isInputCountry = false;   
//            }  
//            else if(password.equals(retypePassword)){
//                JOptionPane.showMessageDialog(null,"Retypepassword matched");
//                //infoLbl.setText("Error: Retypepassword is required");
//                
//                if(username.equals("")){
//                 JOptionPane.showMessageDialog(null,"username is required");
//              //  infoLbl.setText("Error: username is required");
//                }
//                else {
//                    
//                    try {
//                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ict_inventory","root","");
//                        String queryAddUser = "INSERT INTO users (username, password, role) "
//                                + " VALUES( '"+username+"', '"+password+"', '"+roleForUser+"')";
//                        Statement statem = conn.createStatement();
//                        statem.executeUpdate(queryAddUser);
//                        JOptionPane.showMessageDialog(null,"User created");
//                 //       infoLbl.setText("Record inserted");
//                    } catch (SQLException ex) {
//                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//               // infoLbl.setText("done");
//            
//                        }
//            }
//            else{
//                    JOptionPane.showMessageDialog(null,"Password matched");
// 
//            }
//        }
//    }
}
           
        
    

