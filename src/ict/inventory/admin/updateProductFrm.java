/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ict.inventory.admin;

import ict.inventory.connectionpackage.ConnectToDB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author danverkanyemba
 */
public class updateProductFrm extends javax.swing.JFrame {
String currentSelectedProductSerial;
    /**
     * Creates new form updateProductFrm
     */
    public updateProductFrm(String currentSelectedProductSerial,String productSN, 
            String model, String productNameUpdate,String description) {
        initComponents();
        retrieveCategory();
        retrieveLocation();
        this.currentSelectedProductSerial= currentSelectedProductSerial;
        modelTxtUpdate.setText(model);
        productSNTxtUpdate.setText(productSN);
        productNameTxtUpdate.setText(productNameUpdate);
        descriptionTxtUpdate.setText(description);
        
    }
        public void retrieveCategory(){
     
        try {
            ConnectToDB classForConnecting = new ConnectToDB();
            String query = "SELECT name FROM category";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                String categoryName = rs.getString("name");
                categoryUpdateCombo.addItem(categoryName);
            }
            classForConnecting.conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }   
    public void retrieveLocation(){
     
        try {
            ConnectToDB classForConnecting = new ConnectToDB();
            String query = "SELECT name FROM location";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                String locationName = rs.getString("name");
                LocationTxtUpdateCombo.addItem(locationName);
            }
            classForConnecting.conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        productNameTxtUpdate = new javax.swing.JTextField();
        updateProductBtn = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        productSNTxtUpdate = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTxtUpdate = new javax.swing.JTextArea();
        LocationTxtUpdateCombo = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        modelTxtUpdate = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        categoryUpdateCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel8.setBackground(new java.awt.Color(254, 254, 254));

        productNameTxtUpdate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        productNameTxtUpdate.setPreferredSize(new java.awt.Dimension(6, 29));

        updateProductBtn.setBackground(new java.awt.Color(13, 101, 205));
        updateProductBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        updateProductBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateProductBtn.setText(" Update Product");
        updateProductBtn.setBorder(null);
        updateProductBtn.setBorderPainted(false);
        updateProductBtn.setContentAreaFilled(false);
        updateProductBtn.setFocusPainted(false);
        updateProductBtn.setOpaque(true);
        updateProductBtn.setPreferredSize(new java.awt.Dimension(75, 29));
        updateProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductBtnActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(64, 64, 64));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setText("Update Product");
        jLabel25.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, java.awt.Color.blue), javax.swing.BorderFactory.createEmptyBorder(1, 9, 1, 1)));

        productSNTxtUpdate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        productSNTxtUpdate.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(64, 64, 64));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel27.setText("Product S/N:");

        jLabel28.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(64, 64, 64));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel28.setText("Description:");

        jLabel29.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(64, 64, 64));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel29.setText("Name:");

        jLabel31.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(64, 64, 64));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel31.setText("Location:");

        descriptionTxtUpdate.setColumns(1);
        descriptionTxtUpdate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        descriptionTxtUpdate.setLineWrap(true);
        descriptionTxtUpdate.setRows(5);
        jScrollPane3.setViewportView(descriptionTxtUpdate);

        jLabel35.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(64, 64, 64));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel35.setText("Model:");

        modelTxtUpdate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        modelTxtUpdate.setPreferredSize(new java.awt.Dimension(6, 29));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(64, 64, 64));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel32.setText("Category");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productSNTxtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modelTxtUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jScrollPane3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(categoryUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LocationTxtUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(productNameTxtUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(updateProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 117, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(productSNTxtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelTxtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productNameTxtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LocationTxtUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductBtnActionPerformed
        try {
            // TODO add your handling code here:
            String modelUpdate = modelTxtUpdate.getText();
            String productSNUpdate = productSNTxtUpdate.getText();
            String productNameUpdate = productNameTxtUpdate.getText();
            String descriptionUpdate = descriptionTxtUpdate.getText();
            String category = categoryUpdateCombo.getSelectedItem().toString();
            String location = LocationTxtUpdateCombo.getSelectedItem().toString();
            String categoryId = "";
            String locationId = "";

            boolean isInputValid = true;

            if(modelUpdate.isEmpty()){
                JOptionPane.showMessageDialog(null,"Model is required");
                isInputValid= false;
            }
            if(productSNUpdate.isEmpty()){
                JOptionPane.showMessageDialog(null,"Product SN is required");
                isInputValid= false;
            }
            if(productNameUpdate.isEmpty()){
                JOptionPane.showMessageDialog(null,"Product name is required");
                isInputValid = false;
            }
            if(descriptionUpdate.isEmpty()){
                JOptionPane.showMessageDialog(null,"Description is required");
                isInputValid = false;
            }
            if(isInputValid = true){
                    ConnectToDB classForConnecting = new ConnectToDB();                    
                    ConnectToDB classForConnecting2 = new ConnectToDB();
                                       
                    String querySelectIdForCategory = "SELECT id FROM category where name='"+category+"'";
                    Statement st = classForConnecting.conn.createStatement();
                    ResultSet rs = st.executeQuery(querySelectIdForCategory);

                    while(rs.next()){
                        categoryId = rs.getString("id");
                    }    

                    String querySelectIdForLocation = "SELECT id FROM location where name='"+location+"'";
                    Statement st2 = classForConnecting2.conn.createStatement();
                    ResultSet rs2 = st2.executeQuery(querySelectIdForLocation);

                    while(rs2.next()){
                        locationId = rs2.getString("id");
                    }                       
                ConnectToDB DBcon = new ConnectToDB();
                String queryUpdateProduct = "UPDATE products "
                + "SET serial_no =  '"+productSNUpdate+"', "
                + "prod_name= '"+productNameUpdate+"', "
                + "description = '"+descriptionUpdate+"', "
                + "model = '"+modelUpdate+"', "
                + "category = '"+categoryId+"', "
                + "location = '"+locationId+"' "
                + " WHERE serial_no = '"+currentSelectedProductSerial+"'";
                Statement statemw = DBcon.conn.createStatement();
                statemw.executeUpdate(queryUpdateProduct);
                JOptionPane.showMessageDialog(null,"Record updated");
                DBcon.conn.close();
                classForConnecting.conn.close();               
                classForConnecting2.conn.close();

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(updateProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(updateProductFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateProductBtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(updateProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(updateProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(updateProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(updateProductFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new updateProductFrm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox<String> LocationTxtUpdateCombo;
    private static javax.swing.JComboBox<String> categoryUpdateCombo;
    private static javax.swing.JTextArea descriptionTxtUpdate;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTextField modelTxtUpdate;
    private static javax.swing.JTextField productNameTxtUpdate;
    private static javax.swing.JTextField productSNTxtUpdate;
    private static javax.swing.JButton updateProductBtn;
    // End of variables declaration//GEN-END:variables
}
