package ict.inventory.admin;

//import ict.inventory.ordinaryuser.Products;
import ict.inventory.connectionpackage.ConnectToDB;
import java.awt.MouseInfo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *refreshBtn
 * @author danverkanyemba
 */
public class ModifyUsersFrm extends javax.swing.JFrame {

    /**
     * Creates new form ModifyUsers
     */
    public ModifyUsersFrm() {
        initComponents();
        show_Users();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        CreateNewUserPopupItem = new javax.swing.JMenuItem();
        renameUserPopupBtn = new javax.swing.JMenuItem();
        changePasswordPopupBtn = new javax.swing.JMenuItem();
        deleteUserPopupBtn = new javax.swing.JMenuItem();
        RefreshPopupBtn = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        openAddNewUserFrmMenuItem = new javax.swing.JMenu();
        openAddUserFrmMenuItem = new javax.swing.JMenuItem();
        renameUserMenuitem = new javax.swing.JMenuItem();
        changePasswordMenuItem = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        CreateNewUserPopupItem.setText("Create new user");
        CreateNewUserPopupItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewUserPopupItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(CreateNewUserPopupItem);

        renameUserPopupBtn.setText("Rename User");
        renameUserPopupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameUserPopupBtnActionPerformed(evt);
            }
        });
        jPopupMenu1.add(renameUserPopupBtn);

        changePasswordPopupBtn.setText("Change Password");
        changePasswordPopupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordPopupBtnActionPerformed(evt);
            }
        });
        jPopupMenu1.add(changePasswordPopupBtn);

        deleteUserPopupBtn.setText("Delete User");
        deleteUserPopupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserPopupBtnActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteUserPopupBtn);

        RefreshPopupBtn.setText("Refresh");
        RefreshPopupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPopupBtnActionPerformed(evt);
            }
        });
        jPopupMenu1.add(RefreshPopupBtn);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        refreshBtn.setBackground(java.awt.Color.blue);
        refreshBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        refreshBtn.setForeground(java.awt.Color.white);
        refreshBtn.setText("Refresh");
        refreshBtn.setBorder(null);
        refreshBtn.setBorderPainted(false);
        refreshBtn.setContentAreaFilled(false);
        refreshBtn.setFocusPainted(false);
        refreshBtn.setOpaque(true);
        refreshBtn.setPreferredSize(new java.awt.Dimension(75, 29));
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshBtnMouseEntered(evt);
            }
        });
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        usersTable.setAutoCreateRowSorter(true);
        usersTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "Password", "Role", "Date added", "Added by"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.setColumnSelectionAllowed(true);
        usersTable.setRowHeight(30);
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usersTable);
        usersTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(592, Short.MAX_VALUE)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jMenu1.setText("File");

        jMenu3.setText("jMenu3");
        jMenu1.add(jMenu3);

        Exit.setText("jMenuItem1");
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        openAddNewUserFrmMenuItem.setText("Options");

        openAddUserFrmMenuItem.setText("Create new user");
        openAddUserFrmMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAddUserFrmMenuItemActionPerformed(evt);
            }
        });
        openAddNewUserFrmMenuItem.add(openAddUserFrmMenuItem);

        renameUserMenuitem.setText("Rename User");
        renameUserMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameUserMenuitemActionPerformed(evt);
            }
        });
        openAddNewUserFrmMenuItem.add(renameUserMenuitem);

        changePasswordMenuItem.setText("Change Password");
        changePasswordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordMenuItemActionPerformed(evt);
            }
        });
        openAddNewUserFrmMenuItem.add(changePasswordMenuItem);

        jMenuItem3.setText("Delete User");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        openAddNewUserFrmMenuItem.add(jMenuItem3);

        jMenuBar1.add(openAddNewUserFrmMenuItem);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void openAddUserFrmMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAddUserFrmMenuItemActionPerformed
        // TODO add your handling code here:
        CreateNewUserFrm newUser = new CreateNewUserFrm();
        newUser.setVisible(true);
    }//GEN-LAST:event_openAddUserFrmMenuItemActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
             ConnectToDB classForConnecting = new ConnectToDB();

            int[] i =  usersTable.getSelectedRows();
            TableModel selectRow = usersTable.getModel();
            String userid =  (String) selectRow.getValueAt(i [0], 0);
            String queryDeleteUser = "DELETE FROM users WHERE user_id = '"+ userid +"'";
            Statement statem = classForConnecting.conn.createStatement();
            statem.executeUpdate(queryDeleteUser);
            
                    
            JOptionPane.showMessageDialog(null,"Record deleted");
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ModifyUsersFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
      show_Users();

    }//GEN-LAST:event_refreshBtnActionPerformed

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_usersTableMouseClicked

    private void renameUserPopupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameUserPopupBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_renameUserPopupBtnActionPerformed

    private void changePasswordPopupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordPopupBtnActionPerformed
        int[] i =  usersTable.getSelectedRows();
        TableModel selectRow = usersTable.getModel();
        String userid =  (String) selectRow.getValueAt(i [0], 0);
        String username =  (String) selectRow.getValueAt(i [0], 1);
        String password =  (String) selectRow.getValueAt(   i [0], 2);
        String role =  (String) selectRow.getValueAt(i [0], 3);
        new UpdatePasswordFrm(userid).setVisible(true);
        
    }//GEN-LAST:event_changePasswordPopupBtnActionPerformed

    private void deleteUserPopupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserPopupBtnActionPerformed
        try {
             ConnectToDB classForConnecting = new ConnectToDB();

            int[] i =  usersTable.getSelectedRows();
            TableModel selectRow = usersTable.getModel();
            String userid =  (String) selectRow.getValueAt(i [0], 0);
            String queryDeleteUser = "DELETE FROM users WHERE user_id = '"+ userid +"'";
            Statement statem = classForConnecting.conn.createStatement();
            statem.executeUpdate(queryDeleteUser);
            
                    
            JOptionPane.showMessageDialog(null,"Record deleted");
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ModifyUsersFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_deleteUserPopupBtnActionPerformed

    private void RefreshPopupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPopupBtnActionPerformed
        // TODO add your handling code here:
        refreshBtn.doClick();
    }//GEN-LAST:event_RefreshPopupBtnActionPerformed

    private void refreshBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseEntered

        refreshBtn.setBackground(java.awt.Color.gray);
    }//GEN-LAST:event_refreshBtnMouseEntered

    private void refreshBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseExited
          refreshBtn.setBackground(java.awt.Color.blue);

    }//GEN-LAST:event_refreshBtnMouseExited

    private void CreateNewUserPopupItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewUserPopupItemActionPerformed
        CreateNewUserFrm newUser = new CreateNewUserFrm();
        newUser.setVisible(true);
    }//GEN-LAST:event_CreateNewUserPopupItemActionPerformed

    private void renameUserMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameUserMenuitemActionPerformed
        int[] i =  usersTable.getSelectedRows();
        TableModel selectRow = usersTable.getModel();
        String userid =  (String) selectRow.getValueAt(i [0], 0);
        String username =  (String) selectRow.getValueAt(i [0], 1);
        String password =  (String) selectRow.getValueAt(   i [0], 2);
        String role =  (String) selectRow.getValueAt(i [0], 3);

        new UpdateUsernameFrm(userid, username).setVisible(true);
        ModifyUsersFrm sss= new ModifyUsersFrm();
        sss.setVisible(false);
    }//GEN-LAST:event_renameUserMenuitemActionPerformed

    private void changePasswordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordMenuItemActionPerformed
        int[] i =  usersTable.getSelectedRows();
        TableModel selectRow = usersTable.getModel();
        String userid =  (String) selectRow.getValueAt(i [0], 0);
        String username =  (String) selectRow.getValueAt(i [0], 1);
        String password =  (String) selectRow.getValueAt(   i [0], 2);
        String role =  (String) selectRow.getValueAt(i [0], 3);
        new UpdatePasswordFrm(userid).setVisible(true);
        
    }//GEN-LAST:event_changePasswordMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyUsersFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyUsersFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyUsersFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyUsersFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyUsersFrm().setVisible(true);
                   //     renameUserPopupBtn.addActionListener(new UpdateUserAction());
        //changePasswordPopupBtn.addActionListener(new UpdatePasswordAction());
            }
        });
    }
    
    
    
    public ArrayList<User> UserList() throws SQLException, ClassNotFoundException{
      
        
            ArrayList<User> UserList = new ArrayList<>();
            ConnectToDB classForConnecting = new ConnectToDB();
            
            String query = "SELECT user_id, username, password, role, created_at, added_by"
                    + " from users";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            User User;
            while(rs.next()){
                User= new User(
                        rs.getString("user_id")
                        ,rs.getString("username")
                        ,rs.getString("password")
                        ,rs.getString("role")
                        ,rs.getString("created_at")
                        ,rs.getString("added_by")
                );
                UserList.add(User);
            }              
            return UserList;          

        
    }     

    public void show_Users(){
        try {
            ArrayList<User> list = UserList();
            DefaultTableModel  model2= (DefaultTableModel)usersTable.getModel();
            model2.setRowCount(0);
            System.out.println("getting table info");
            Object[] row = new Object[7];
            for(int i=0; i<list.size();i++){
                row[0] =list.get(i).getUser_id();
                row[1] =list.get(i).getUsername();
                row[2] =list.get(i).getPassword();
                row[3] =list.get(i).getRole();
                row[4] =list.get(i).getCreatedAt();
                row[5] =list.get(i).getAddedBy();
                model2.addRow(row);
            }   } catch (SQLException ex) {
            Logger.getLogger(ModifyUsersFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ModifyUsersFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CreateNewUserPopupItem;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem RefreshPopupBtn;
    private static javax.swing.JMenuItem changePasswordMenuItem;
    private static javax.swing.JMenuItem changePasswordPopupBtn;
    private javax.swing.JMenuItem deleteUserPopupBtn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu openAddNewUserFrmMenuItem;
    private javax.swing.JMenuItem openAddUserFrmMenuItem;
    private javax.swing.JButton refreshBtn;
    private static javax.swing.JMenuItem renameUserMenuitem;
    private static javax.swing.JMenuItem renameUserPopupBtn;
    public javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables

}