/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ict.inventory.ordinaryuser;

import ict.inventory.connectionpackage.ConnectToDB;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author danverkanyemba
 */
public class IssueProdFrm extends javax.swing.JFrame {
private String serial_no, DepartmentId, employeeId, idForUser;
private String category_id, location_id;
    /**
     * Creates new form updateDepartmentsNameFrm
     */
    public IssueProdFrm(String serial_no, String idForUser) throws ClassNotFoundException, SQLException {

        initComponents();
        this.serial_no = serial_no;
        this.idForUser = idForUser;
        show_issue();
        retrieveDepartment();
    }
    public void retrieveDepartment(){
        try {
            ConnectToDB classForConnecting = new ConnectToDB();
            String query = "SELECT name FROM department";
            Statement st = classForConnecting.conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Departments departments;
            while(rs.next()){
                String DepartmentName = rs.getString("name");
                departmentCombo.addItem(DepartmentName);
            }}
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddEmployeeNameFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        departmentCombo = new javax.swing.JComboBox<>();
        employeeNameCombo = new javax.swing.JComboBox<>();
        issueBtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        issueTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel7.setBackground(java.awt.Color.white);
        jPanel7.setBorder(null);
        jPanel7.setPreferredSize(new java.awt.Dimension(452, 903));

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setBorder(null);
        jPanel4.setForeground(new java.awt.Color(1, 1, 1));
        jPanel4.setOpaque(false);

        jPanel14.setBackground(new java.awt.Color(254, 254, 254));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.black)); // NOI18N
        jPanel14.setForeground(new java.awt.Color(1, 1, 1));
        jPanel14.setOpaque(false);

        jLabel33.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(64, 64, 64));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel33.setText("Employee Name:");

        jLabel67.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(64, 64, 64));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel67.setText("Department:");

        departmentCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboActionPerformed(evt);
            }
        });

        employeeNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeNameComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(employeeNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(departmentCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(12, 12, 12))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        issueBtn.setBackground(new java.awt.Color(13, 101, 205));
        issueBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        issueBtn.setForeground(new java.awt.Color(254, 254, 254));
        issueBtn.setText(" Issue Product");
        issueBtn.setBorder(null);
        issueBtn.setBorderPainted(false);
        issueBtn.setContentAreaFilled(false);
        issueBtn.setFocusPainted(false);
        issueBtn.setOpaque(true);
        issueBtn.setPreferredSize(new java.awt.Dimension(75, 29));
        issueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(issueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(261, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(issueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(64, 64, 64));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Issue Product");
        jLabel18.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, java.awt.Color.blue), javax.swing.BorderFactory.createEmptyBorder(1, 9, 1, 1)));

        jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane8.setAutoscrolls(true);

        issueTable.setAutoCreateRowSorter(true);
        issueTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        issueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Model", "Name", "Description", "Category", "Location", "Date added in stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        issueTable.setRowHeight(30);
        issueTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                issueTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(issueTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel18))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane8))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 892, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<Stock> IssueList(){
      
        ArrayList<Stock> IssueList = new ArrayList<>();
        try {
        ConnectToDB classForConnecting = new ConnectToDB();     
        String query = "SELECT * FROM products where serial_no = '"+serial_no+"'";
        Statement st = classForConnecting.conn.createStatement();
        ResultSet rs = st.executeQuery(query);
        Stock stock;
        while(rs.next()){
        stock = new Stock(
                    rs.getString("serial_no")
                    ,rs.getString("model")
                    ,rs.getString("prod_name")
                    ,rs.getString("description")
                    ,rs.getString("location") 
                    ,rs.getString("category")                     
                    ,rs.getString("date_added_in_stock")
                ); 
        IssueList.add(stock);
            }
        classForConnecting.conn.close();
        }  catch (ClassNotFoundException | SQLException e) {
        }
              return IssueList;          
    }  

    public void show_issue() throws ClassNotFoundException, SQLException{
    ArrayList<Stock> list = IssueList();  
    DefaultTableModel  model= (DefaultTableModel)issueTable.getModel();
    model.setRowCount(0);
    Object[] row = new Object[8];
    ConnectToDB classForConnecting = new ConnectToDB();     
    ConnectToDB classForConnecting2 = new ConnectToDB();   
    for(int i=0; i<list.size();i++){
        row[0] =list.get(i).getProductSerialNo();
        row[1] =list.get(i).getProductModel();
        row[2] =list.get(i).getProductName();
        row[3] =list.get(i).getDescription();
        String Category = list.get(i).getCategory();
        this.category_id = Category;
        String query = "SELECT name FROM category where id = '"+Category+"'";
        Statement st = classForConnecting.conn.createStatement();
        ResultSet rs = st.executeQuery(query);
        while(rs.next()){
        row[4] = rs.getString("name");
        }
        String Location = list.get(i).getLocation();
        this.location_id = Location;
        String query2 = "SELECT name FROM location where id = '"+Location+"'";
        Statement st2 = classForConnecting2.conn.createStatement();
        ResultSet rs2 = st2.executeQuery(query2);
        while(rs2.next()){
        row[5] = rs2.getString("name");
        }          
        row[6] =list.get(i).getDateAddedInStock();

        model.addRow(row);
    }
    }    
    
    
    private void issueTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_issueTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_issueTableMouseClicked

    private void departmentComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboActionPerformed
    try {
        ConnectToDB classForConnecting = new ConnectToDB();
        String departmentName = departmentCombo.getSelectedItem().toString();
        String querySelectIdForDepartment = "SELECT id FROM department where name='"+departmentName+"'";
        Statement st = classForConnecting.conn.createStatement();
        ResultSet rs = st.executeQuery(querySelectIdForDepartment);
        while(rs.next()){
            DepartmentId = rs.getString("id");
       }
        
        String queryAddEmployee = "SELECT name FROM employee WHERE department_id = '"+ DepartmentId +"' ";
        Statement st2 = classForConnecting.conn.createStatement();
        ResultSet rs2 = st2.executeQuery(queryAddEmployee);
        employeeNameCombo.removeAllItems();
        while(rs2.next()){
                String EmployeeName = rs2.getString("name");
                employeeNameCombo.addItem(EmployeeName);
        }}
     catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(IssueProdFrm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_departmentComboActionPerformed

    private void employeeNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeNameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeNameComboActionPerformed

    private void issueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBtnActionPerformed
    try {
        ConnectToDB classForConnecting = new ConnectToDB();
        String employeeName = employeeNameCombo.getSelectedItem().toString();
        String querySelectIdForDepartment = "SELECT id FROM employee where name='"+employeeName+"'";
        Statement st = classForConnecting.conn.createStatement();
        ResultSet rs = st.executeQuery(querySelectIdForDepartment);
        
        while(rs.next()){
            employeeId = rs.getString("id");
        }
        
        String queryIssue = "INSERT INTO issued(employee_id, product_serial_no , added_by, category_id, location_id) values(?, ?, ?, ?, ?) ";
        
        PreparedStatement queryIssueProduct = classForConnecting.conn.prepareStatement(queryIssue);
        queryIssueProduct.setString(1, employeeId);
        queryIssueProduct.setString(2, serial_no);        
        queryIssueProduct.setString(3, idForUser);        
        queryIssueProduct.setString(4, category_id);        
        queryIssueProduct.setString(5, location_id);

        queryIssueProduct.executeUpdate();
        
        String queryUpdateProd = "UPDATE products "
                + "SET is_available =  ? WHERE serial_no= ? ";
        PreparedStatement updateProd = classForConnecting.conn.prepareStatement(queryUpdateProd);
        updateProd.setString(1, "0");
        updateProd.setString(2, serial_no);    
        updateProd.executeUpdate();

        JOptionPane.showMessageDialog(null,"Product Issued");
        classForConnecting.conn.close();   

    } catch (ClassNotFoundException ex) {
        Logger.getLogger(IssueProdFrm.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(IssueProdFrm.class.getName()).log(Level.SEVERE, null, ex);
    } 
    }//GEN-LAST:event_issueBtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UpdateDepartmentsNameFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UpdateDepartmentsNameFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UpdateDepartmentsNameFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UpdateDepartmentsNameFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UpdateDepartmentsNameFrm(String departmentName).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox<String> departmentCombo;
    private static javax.swing.JComboBox<String> employeeNameCombo;
    private static javax.swing.JButton issueBtn;
    private javax.swing.JTable issueTable;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane8;
    // End of variables declaration//GEN-END:variables
}
